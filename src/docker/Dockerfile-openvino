FROM ubuntu:22.04 as builder

ENV DEBIAN_FRONTEND=noninteractive

# Update and install minimal required packages
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential cmake git pkg-config wget unzip

# Install graphical and video codecs libraries
RUN apt-get install -y --no-install-recommends \
    libgtk-3-dev libavcodec-dev libavformat-dev libswscale-dev libv4l-dev \
    libxvidcore-dev libx264-dev

# Install image processing libraries
RUN apt-get install -y --no-install-recommends \
    libjpeg-dev libpng-dev libtiff-dev

# Install GStreamer and plugins
RUN apt-get install -y --no-install-recommends \
    libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev \
    gstreamer1.0-plugins-base gstreamer1.0-plugins-good \
    gstreamer1.0-plugins-bad gstreamer1.0-plugins-ugly \
    gstreamer1.0-libav

# Install mathematical libraries
RUN apt-get install -y --no-install-recommends \
    libatlas-base-dev liblapacke-dev

# Install Python, NumPy, and pip
RUN apt-get install -y --no-install-recommends \
    python3-dev python3-numpy python3-pip

# Install Qt and GTK2.0 for OpenCV GUI features
# RUN apt-get install -y --no-install-recommends \
#     qt5-default libqt5webkit5-dev

# Clean apt cache to reduce image size
RUN apt-get clean && rm -rf /var/lib/apt/lists/*

WORKDIR /opt

# RUN wget -O opencv.zip https://github.com/opencv/opencv/archive/5.x.zip && \
#     unzip opencv.zip && mv opencv-5.x opencv && \
#     wget -O opencv_contrib.zip https://github.com/opencv/opencv_contrib/archive/5.x.zip && \
#     unzip opencv_contrib.zip && mv opencv_contrib-5.x opencv_contrib

# WORKDIR /opt/opencv/build

# # Compile and install OpenCV
# RUN cd /opt/opencv && mkdir build && cd build && \
#     cmake -D CMAKE_BUILD_TYPE=RELEASE \
#           -D CMAKE_INSTALL_PREFIX=/usr/local \
#           -D OPENCV_EXTRA_MODULES_PATH=../../opencv_contrib/modules \
#           -D BUILD_NEW_PYTHON_SUPPORT=ON \
#           -D BUILD_opencv_python2=OFF \
#           -D BUILD_opencv_python3=ON \
#           -D INSTALL_C_EXAMPLES=OFF \
#           -D INSTALL_PYTHON_EXAMPLES=OFF \
#           -D OPENCV_GENERATE_PKGCONFIG=ON \
#           -D OPENCV_ENABLE_NONFREE=ON \
#           -D WITH_GSTREAMER=ON \
#           -D WITH_OPENGL=ON \
#           -D BUILD_EXAMPLES=OFF .. \
#     && make \
#     && make install

# WORKDIR /opt

# # Download and install OpenVINO
# RUN wget http://registrationcenter-download.intel.com/akdlm/irc_nas/tec/16923/l_openvino_toolkit_p_2021.4.582.tgz && \
#     tar -xzf l_openvino_toolkit_p_2021.4.582.tgz && \
#     cd l_openvino_toolkit_p_2021.4.582 && \
#     ./install_openvino_dependencies.sh && \
#     sed -i 's/decline/accept/g' silent.cfg && \
#     ./install.sh --silent silent.cfg

FROM ubuntu:22.04

# COPY --from=builder /usr/local /usr/local
# COPY --from=builder /opt/intel /opt/intel

# ENV INTEL_OPENVINO_DIR=/opt/intel/openvino_2022
# ENV LD_LIBRARY_PATH=${INTEL_OPENVINO_DIR}/runtime/3rdparty/tbb/lib:${INTEL_OPENVINO_DIR}/runtime/lib/intel64:${LD_LIBRARY_PATH}
# ENV PATH=${INTEL_OPENVINO_DIR}/runtime/tools:${PATH}

# Install runtime dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    libgstreamer1.0-0 gstreamer1.0-plugins-base gstreamer1.0-plugins-good \
    gstreamer1.0-plugins-bad gstreamer1.0

RUN curl -fsSL https://code-server.dev/install.sh | sh
ENV DISPLAY=host.docker.internal:0.0
ENV LD_LIBRARY_PATH=/usr/local/lib
WORKDIR /usr/src/app
EXPOSE 8080
CMD ["code-server", "--auth", "none", "--bind-addr", "0.0.0.0:8080"]